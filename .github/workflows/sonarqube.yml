name: Sonar Cloud

on:
  push:
    branches: [ "main" ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports: ['27017:27017']
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: secret
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URI: ${{ secrets.TEST_CI_DB_URI }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.2

      - name: Install dependencies
        run: go mod download -x

      - name: Install mongosh
        run: |
          curl -fsSL https://pgp.mongodb.com/server-7.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-server-7.0.gpg
          echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Wait for MongoDB
        run: |
          until mongosh "$DATABASE_URI" --eval 'db.runCommand({ ping: 1 })'; do
            echo "Waiting for MongoDB..."
            sleep 1
          done

      - name: Run tests and generate coverage
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=KauanCarvalho_fiap-sa-payment-service
            -Dsonar.organization=kauancarvalho
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
